// GENERATED CODE - DO NOT MODIFY BY HAND
// This code was generated by ObjectBox. To update it run the generator again
// with `dart run build_runner build`.
// See also https://docs.objectbox.io/getting-started#generate-objectbox-code

// ignore_for_file: camel_case_types, depend_on_referenced_packages
// coverage:ignore-file

import 'dart:typed_data';

import 'package:flat_buffers/flat_buffers.dart' as fb;
import 'package:objectbox/internal.dart'
    as obx_int; // generated code can access "internal" functionality
import 'package:objectbox/objectbox.dart' as obx;
import 'package:objectbox_flutter_libs/objectbox_flutter_libs.dart';

import 'app/database/src/storage/schemes/jar.dart';
import 'app/database/src/storage/schemes/memo.dart';

export 'package:objectbox/objectbox.dart'; // so that callers only have to import this file

final _entities = <obx_int.ModelEntity>[
  obx_int.ModelEntity(
      id: const obx_int.IdUid(1, 1732983208189280901),
      name: 'Jar',
      lastPropertyId: const obx_int.IdUid(11, 3664242703580465476),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 8315529474357073857),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 4791673412544287777),
            name: 'name',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 5063418763273654742),
            name: 'theme',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 4353084585207398683),
            name: 'isLocked',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 3551025198763355352),
            name: 'note',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 8735383565382568915),
            name: 'emoji',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(8, 6851627490893699667),
            name: 'isArchived',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(9, 5639209742729621128),
            name: 'createdAt',
            type: 10,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(10, 1100502235640319617),
            name: 'scheduledAt',
            type: 10,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(11, 3664242703580465476),
            name: 'isNotificationEnabled',
            type: 1,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[
        obx_int.ModelBacklink(name: 'memos', srcEntity: 'Memo', srcField: 'jar')
      ]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(2, 7616063930354215653),
      name: 'Memo',
      lastPropertyId: const obx_int.IdUid(7, 6350304796109429172),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 7980178000989585684),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 6099582189886061875),
            name: 'title',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 5764510253637858813),
            name: 'filePath',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 2576622707202833672),
            name: 'jarId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(1, 5271724769785805431),
            relationTarget: 'Jar'),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 6350304796109429172),
            name: 'color',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[])
];

/// Shortcut for [obx.Store.new] that passes [getObjectBoxModel] and for Flutter
/// apps by default a [directory] using `defaultStoreDirectory()` from the
/// ObjectBox Flutter library.
///
/// Note: for desktop apps it is recommended to specify a unique [directory].
///
/// See [obx.Store.new] for an explanation of all parameters.
///
/// For Flutter apps, also calls `loadObjectBoxLibraryAndroidCompat()` from
/// the ObjectBox Flutter library to fix loading the native ObjectBox library
/// on Android 6 and older.
Future<obx.Store> openStore(
    {String? directory,
    int? maxDBSizeInKB,
    int? maxDataSizeInKB,
    int? fileMode,
    int? maxReaders,
    bool queriesCaseSensitiveDefault = true,
    String? macosApplicationGroup}) async {
  await loadObjectBoxLibraryAndroidCompat();
  return obx.Store(getObjectBoxModel(),
      directory: directory ?? (await defaultStoreDirectory()).path,
      maxDBSizeInKB: maxDBSizeInKB,
      maxDataSizeInKB: maxDataSizeInKB,
      fileMode: fileMode,
      maxReaders: maxReaders,
      queriesCaseSensitiveDefault: queriesCaseSensitiveDefault,
      macosApplicationGroup: macosApplicationGroup);
}

/// Returns the ObjectBox model definition for this project for use with
/// [obx.Store.new].
obx_int.ModelDefinition getObjectBoxModel() {
  final model = obx_int.ModelInfo(
      entities: _entities,
      lastEntityId: const obx_int.IdUid(2, 7616063930354215653),
      lastIndexId: const obx_int.IdUid(1, 5271724769785805431),
      lastRelationId: const obx_int.IdUid(0, 0),
      lastSequenceId: const obx_int.IdUid(0, 0),
      retiredEntityUids: const [],
      retiredIndexUids: const [],
      retiredPropertyUids: const [
        4958869616909427412,
        7291624213964461490,
        8663262983515949686
      ],
      retiredRelationUids: const [],
      modelVersion: 5,
      modelVersionParserMinimum: 5,
      version: 1);

  final bindings = <Type, obx_int.EntityDefinition>{
    Jar: obx_int.EntityDefinition<Jar>(
        model: _entities[0],
        toOneRelations: (Jar object) => [],
        toManyRelations: (Jar object) => {
              obx_int.RelInfo<Memo>.toOneBacklink(
                  6, object.id, (Memo srcObject) => srcObject.jar): object.memos
            },
        getId: (Jar object) => object.id,
        setId: (Jar object, int id) {
          object.id = id;
        },
        objectToFB: (Jar object, fb.Builder fbb) {
          final nameOffset = fbb.writeString(object.name);
          final themeOffset = fbb.writeString(object.theme);
          final noteOffset =
              object.note == null ? null : fbb.writeString(object.note!);
          final emojiOffset = fbb.writeString(object.emoji);
          fbb.startTable(12);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, nameOffset);
          fbb.addOffset(2, themeOffset);
          fbb.addBool(3, object.isLocked);
          fbb.addOffset(5, noteOffset);
          fbb.addOffset(6, emojiOffset);
          fbb.addBool(7, object.isArchived);
          fbb.addInt64(8, object.createdAt.millisecondsSinceEpoch);
          fbb.addInt64(9, object.scheduledAt.millisecondsSinceEpoch);
          fbb.addBool(10, object.isNotificationEnabled);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final themeParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 8, '');
          final emojiParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 16, '');
          final noteParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 14);
          final isLockedParam =
              const fb.BoolReader().vTableGet(buffer, rootOffset, 10, false);
          final isNotificationEnabledParam =
              const fb.BoolReader().vTableGet(buffer, rootOffset, 24, false);
          final isArchivedParam =
              const fb.BoolReader().vTableGet(buffer, rootOffset, 18, false);
          final createdAtParam = DateTime.fromMillisecondsSinceEpoch(
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 20, 0));
          final scheduledAtParam = DateTime.fromMillisecondsSinceEpoch(
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 22, 0));
          final object = Jar(
              name: nameParam,
              theme: themeParam,
              emoji: emojiParam,
              note: noteParam,
              isLocked: isLockedParam,
              isNotificationEnabled: isNotificationEnabledParam,
              isArchived: isArchivedParam,
              createdAt: createdAtParam,
              scheduledAt: scheduledAtParam)
            ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          obx_int.InternalToManyAccess.setRelInfo<Jar>(
              object.memos,
              store,
              obx_int.RelInfo<Memo>.toOneBacklink(
                  6, object.id, (Memo srcObject) => srcObject.jar));
          return object;
        }),
    Memo: obx_int.EntityDefinition<Memo>(
        model: _entities[1],
        toOneRelations: (Memo object) => [object.jar],
        toManyRelations: (Memo object) => {},
        getId: (Memo object) => object.id,
        setId: (Memo object, int id) {
          object.id = id;
        },
        objectToFB: (Memo object, fb.Builder fbb) {
          final titleOffset = fbb.writeString(object.title);
          final filePathOffset = fbb.writeString(object.filePath);
          final colorOffset =
              object.color == null ? null : fbb.writeString(object.color!);
          fbb.startTable(8);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, titleOffset);
          fbb.addOffset(2, filePathOffset);
          fbb.addInt64(5, object.jar.targetId);
          fbb.addOffset(6, colorOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final titleParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final filePathParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 8, '');
          final colorParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 16);
          final object = Memo(
              title: titleParam, filePath: filePathParam, color: colorParam)
            ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          object.jar.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 14, 0);
          object.jar.attach(store);
          return object;
        })
  };

  return obx_int.ModelDefinition(model, bindings);
}

/// [Jar] entity fields to define ObjectBox queries.
class Jar_ {
  /// See [Jar.id].
  static final id = obx.QueryIntegerProperty<Jar>(_entities[0].properties[0]);

  /// See [Jar.name].
  static final name = obx.QueryStringProperty<Jar>(_entities[0].properties[1]);

  /// See [Jar.theme].
  static final theme = obx.QueryStringProperty<Jar>(_entities[0].properties[2]);

  /// See [Jar.isLocked].
  static final isLocked =
      obx.QueryBooleanProperty<Jar>(_entities[0].properties[3]);

  /// See [Jar.note].
  static final note = obx.QueryStringProperty<Jar>(_entities[0].properties[4]);

  /// See [Jar.emoji].
  static final emoji = obx.QueryStringProperty<Jar>(_entities[0].properties[5]);

  /// See [Jar.isArchived].
  static final isArchived =
      obx.QueryBooleanProperty<Jar>(_entities[0].properties[6]);

  /// See [Jar.createdAt].
  static final createdAt =
      obx.QueryDateProperty<Jar>(_entities[0].properties[7]);

  /// See [Jar.scheduledAt].
  static final scheduledAt =
      obx.QueryDateProperty<Jar>(_entities[0].properties[8]);

  /// See [Jar.isNotificationEnabled].
  static final isNotificationEnabled =
      obx.QueryBooleanProperty<Jar>(_entities[0].properties[9]);

  /// see [Jar.memos]
  static final memos = obx.QueryBacklinkToMany<Memo, Jar>(Memo_.jar);
}

/// [Memo] entity fields to define ObjectBox queries.
class Memo_ {
  /// See [Memo.id].
  static final id = obx.QueryIntegerProperty<Memo>(_entities[1].properties[0]);

  /// See [Memo.title].
  static final title =
      obx.QueryStringProperty<Memo>(_entities[1].properties[1]);

  /// See [Memo.filePath].
  static final filePath =
      obx.QueryStringProperty<Memo>(_entities[1].properties[2]);

  /// See [Memo.jar].
  static final jar =
      obx.QueryRelationToOne<Memo, Jar>(_entities[1].properties[3]);

  /// See [Memo.color].
  static final color =
      obx.QueryStringProperty<Memo>(_entities[1].properties[4]);
}
